
version: 1.0.{build}

image:
  - Visual Studio 2015
  - Ubuntu1604

platform:
  - x64

environment:
  QT_DIR_WIN_14_64: C:\Qt\5.6.3\msvc2015_64
  QT_DIR_WIN_14_32: C:\Qt\5.6.3\msvc2015_32
  QT_DIR_WIN_12_64: C:\Qt\5.6.3\msvc2013_64
  QT_DIR_WIN_12_32: C:\Qt\5.6.3\msvc2013_32

for:
-
  matrix:
    only:
      - image: Visual Studio 2015

  init:
    - ver
    - cmake --version

  build_script:
    - md build_msvc14_x64
    - cd build_msvc14_x64
    - cmake -DQT_WIN_PATH=%QT_DIR_WIN_14_64% -G "Visual Studio 14 2015 Win64" ..
    - cmake --build . --config Release
    - cd ..
    - md build_msvc14_x86
    - cd build_msvc14_x86
    - cmake -DQT_WIN_PATH=%QT_DIR_WIN_14_32% -G "Visual Studio 14 2015" ..
    - cmake --build . --config Release
    - cd ..
    - md build_msvc12_x64
    - cd build_msvc12_x64
    - cmake -DQT_WIN_PATH=%QT_DIR_WIN_12_64% -G "Visual Studio 12 2013 Win64" ..
    - cmake --build . --config Release
    - cd ..
    - md build_msvc12_x86
    - cd build_msvc12_x86
    - cmake -DQT_WIN_PATH=%QT_DIR_WIN_12_32% -G "Visual Studio 12 2013" ..
    - cmake --build . --config Release
    - cd ..
    - md bin_msvc14_x64
    - md bin_msvc14_x64\platforms
    - md bin_msvc14_x64\styles
    # copy executable and dll's for msvc14-x64
    - copy build_msvc14_x64\Release\cmake_test.exe bin_msvc14_x64\cmake_test.exe
    - for %I in (Qt5Core.dll Qt5Gui.dll Qt5Widgets.dll) do copy %QT_DIR_WIN_14_64%\bin\%I bin_msvc14_x64\
    - copy %QT_DIR_WIN_14_64%\plugins\platforms\qwindows.dll bin_msvc14_x64\platforms\qwindows.dll
    - copy %QT_DIR_WIN_14_64%\plugins\styles\qwindowsvistastyle.dll bin_msvc14_x64\styles\qwindowsvistastyle.dll
    # copy executable and dll's for msvc14-x86
    - copy build_msvc14_x86\Release\cmake_test.exe bin_msvc14_x86\cmake_test.exe
    - for %I in (Qt5Core.dll Qt5Gui.dll Qt5Widgets.dll) do copy %QT_DIR_WIN_14_32%\bin\%I bin_msvc14_x86\
    - copy %QT_DIR_WIN_14_32%\plugins\platforms\qwindows.dll bin_msvc14_x86\platforms\qwindows.dll
    - copy %QT_DIR_WIN_14_32%\plugins\styles\qwindowsvistastyle.dll bin_msvc14_x86\styles\qwindowsvistastyle.dll
    # copy executable and dll's for msvc12-x64
    - copy build_msvc12_x64\Release\cmake_test.exe bin_msvc12_x64\cmake_test.exe
    - for %I in (Qt5Core.dll Qt5Gui.dll Qt5Widgets.dll) do copy %QT_DIR_WIN_12_64%\bin\%I bin_msvc12_x64\
    - copy %QT_DIR_WIN_12_64%\plugins\platforms\qwindows.dll bin_msvc12_x64\platforms\qwindows.dll
    - copy %QT_DIR_WIN_12_64%\plugins\styles\qwindowsvistastyle.dll bin_msvc12_x64\styles\qwindowsvistastyle.dll
    # copy executable and dll's for msvc12-x86
    - copy build_msvc12_x86\Release\cmake_test.exe bin_msvc12_x86\cmake_test.exe
    - for %I in (Qt5Core.dll Qt5Gui.dll Qt5Widgets.dll) do copy %QT_DIR_WIN_12_32%\bin\%I bin_msvc12_x86\
    - copy %QT_DIR_WIN_12_32%\plugins\platforms\qwindows.dll bin_msvc12_x86\platforms\qwindows.dll
    - copy %QT_DIR_WIN_12_32%\plugins\styles\qwindowsvistastyle.dll bin_msvc12_x86\styles\qwindowsvistastyle.dll

  artifacts:
    - path: bin_msvc14_x64
      type: zip
      name: App-msvc14-x64

    - path: bin_msvc14_x86
      type: zip
      name: App-msvc14-x86

    - path: bin_msvc12_x64
      type: zip
      name: App-msvc12-x64

    - path: bin_msvc12_x86
      type: zip
      name: App-msvc12-x86
-
  matrix:
    only:
      - image: Ubuntu1604

  init:
    - cmake --version
    - gcc -v

  install:
    - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
    - sudo apt-get update -qq
    - sudo apt-get -y install qtbase5-dev libqt5svg5-dev qt5-default
    - mkdir tools && cd tools
    # we use wget to fetch the cmake binaries
    - wget --no-check-certificate https://cmake.org/files/v3.17/cmake-3.17.1-Linux-x86_64.tar.gz
    - wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
    - wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
    # extract the binaries; the output here is quite lengthy,
    # so we swallow it to not clutter up the console
    - tar -xvf cmake-3.17.1-Linux-x86_64.tar.gz > /dev/null
    - mv cmake-3.17.1-Linux-x86_64 cmake-install
    - chmod a+x linuxdeploy-x86_64.AppImage linuxdeploy-plugin-qt-x86_64.AppImage
    # add both the top-level directory and the bin directory from the archive
    # to the system PATH. By adding it to the front of the path we hide the
    # preinstalled CMake with our own.
    - cd ..
    - PATH=tools/cmake-install:tools/cmake-install/bin:$PATH
    - cmake --version
#    - sh: sudo apt-get -y install -qq gcc g++ cmake

  build_script:
    - echo Ubuntu build script
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
    - make
    - make install DESTDIR=AppDir
    - ../tools/linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage
    - mv AppTest*.AppImage AppTest-x86_64.AppImage
    - cd ..

  artifacts:
    - path: build/AppTest-x86_64.AppImage
      type: File
      name: AppTest-x86_64.AppImage


deploy:
  release: CmakeCITest-v$(appveyor_build_version)
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: 6xHQBZVK+RtxmddurGPIg7Kx5vecSN1vVxwbv35EQmsIey4DXDXYhwAW/yLXbNLJ
  artifact: App-msvc14-x64, App-msvc14-x86, App-msvc12-x64, App-msvc12-x86, AppTest-x86_64.AppImage
  draft: false
  prerelease: false
  tag: $(APPVEYOR_REPO_TAG_NAME)
  on:
    APPVEYOR_REPO_TAG: true        # deploy on tag push only
